name: Release documentation deployment

on:
  push:
    tags:
    - "v*"
    branches:
    - dev

concurrency:
  group: docs-deploy

permissions:
  contents: write

jobs:
  build:
    name: Building Documentation
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python runtime
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Build documentation
      run: |
        MERINGUE_VERSION=$(hatch version)
        if [[ ! "$MERINGUE_VERSION" =~ (dev|alpha|beta) ]]; then
          hatch run docs:build-check
        fi

    - name: Configure Git for GitHub Actions bot
      run: |
        git config --local user.name 'github-actions[bot]'
        git config --local user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Commit documentation
      run: |
        MERINGUE_DOCS_VERSION=$(hatch version | grep -Eo '[0-9]\.[0-9]+' | head -1)
        if [[ "$MERINGUE_VERSION" =~ (dev|alpha|beta|rc) ]]; then
          hatch run docs:ci-build dev
        else
          hatch run docs:ci-build $MERINGUE_DOCS_VERSION --update-aliases latest
        fi

    - name: Test
      run: |
        git checkout gh-pages
        git --no-pager log -n 5
        # git push

  #   - name: Create archive
  #     run: |
  #       echo "Create archive"
  #       git checkout gh-pages
  #       zip -r site.zip . -x '*.git*'
  #       # git archive breaks links
  #       # git archive -o site.zip gh-pages

  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: documentation
  #       path: site.zip

  # gh-publish:
  #   name: Publication of documentation on github pages
  #   runs-on: ubuntu-latest

  #   needs:
  #   - build

  #   steps:
  #   - name: Download artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: documentation

  #   - name: Unpack archive
  #     run: python -m zipfile -e site.zip site

  #   - name: Deploy
  #     uses: peaceiris/actions-gh-pages@v3
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       publish_dir: site
  #       commit_message: ${{ github.event.head_commit.message }}
  #       # Write .nojekyll at the root, see:
  #       # https://help.github.com/en/github/working-with-github-pages/about-github-pages#static-site-generators
  #       enable_jekyll: false
  #       # Only deploy if there were changes
  #       allow_empty_commit: false
