name: Release Documentation

on:
  push:
    branches: [next]
  workflow_dispatch:
  workflow_run:
    branches: [master]
    workflows: ["Release Python Package"]
    types: [completed]

concurrency:
  group: release-docs-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: Building & Deploying Documentation
    runs-on: ubuntu-latest
    # manual
    # without 'skip ci' and push next
    # without 'skip ci' and after success 'Release Python Package' on branch (master)
    if: |
      github.event_name == 'workflow_dispatch'
      || (
        !contains(github.event.head_commit.message, 'skip ci')
        && !contains(github.event.head_commit.message, 'ci skip')
        && (
          github.event_name == 'push'
          || (
            github.event_name == 'workflow_run'
            && github.event.workflow_run.conclusion == 'success'
          )
        )
      )

    permissions:
      contents: write

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup | Set up Python runtime
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup | Install Hatch
        uses: pypa/hatch@install

      - name: Action | Build & Check documentation
        if: |
          github.ref == 'refs/heads/master'
          || (
            github.event_name == 'workflow_run'
            && github.event.workflow_run.head_branch == 'master'
          )
        run: hatch run docs:build-check

      - name: Setup | Configure Git for GitHub Actions bot
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Action | Build & Commit documentation
        run: |
          echo "üîß Extracting ref name from GITHUB_REF: $GITHUB_REF"
          REF_NAME="${GITHUB_REF#refs/heads/}"
          echo "üìå Current branch name: $REF_NAME"

          echo "üìã Existing documentation versions"
          hatch run docs:mike list

          if [[ "$REF_NAME" == "master" ]]; then
            MERINGUE_DOCS_VERSION=$(hatch version | grep -Eo '[0-9]\.[0-9]+' | head -1)
            echo "üì¶ Extracted docs version: $MERINGUE_DOCS_VERSION"
            hatch run docs:ci-build $MERINGUE_DOCS_VERSION --update-aliases latest
          elif [[ "$REF_NAME" == "next" ]]; then
            echo "üß™ Detected branch 'next'. Deploying preview docs for 'next'..."
            hatch run docs:ci-build next
          else
            echo "‚öôÔ∏è Branch is not 'master' or 'next'. Using fallback: dev docs."
            hatch run docs:ci-build dev
          fi

      - name: Action | Deploy
        run: |
          git checkout gh-pages
          git push origin gh-pages
