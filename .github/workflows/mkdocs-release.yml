name: Release Documentation

on:
  workflow_run:
    workflows: ["Release Python Package"]
    types: [completed]
    branches: [master, next]

concurrency:
  group: release-docs-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: Building & Deploying Documentation
    runs-on: ubuntu-latest
    # without 'skip ci' and after success 'Release Python Package'
    if: |
      !contains(github.event.head_commit.message, 'skip ci')
      && !contains(github.event.head_commit.message, 'ci skip')
      && (
        github.event_name == 'workflow_run'
        && github.event.workflow_run.conclusion == 'success'
      )

    permissions:
      contents: write

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup | Set up Python runtime
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup | Install Hatch
        uses: pypa/hatch@install

      - name: Setup | Determine release type
        id: release
        run: |
          MERINGUE_VERSION=$(hatch version)
          if [[ "$MERINGUE_VERSION" =~ (rc) ]]; then
            TYPE=release-candidate
          elif [[ "$MERINGUE_VERSION" =~ (dev|alpha|beta) ]]; then
            TYPE=dev
          else
            TYPE=stable
          fi

          echo "‚ÑπÔ∏è Release: $TYPE"
          echo "‚ÑπÔ∏è Version: $MERINGUE_VERSION"
          echo "type=$TYPE" >> $GITHUB_OUTPUT

      - name: Setup | Install Node.js
        if: steps.release.outputs.type != 'stable'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup | Install gitmoji-changelog
        if: steps.release.outputs.type != 'stable'
        run: npm install -g gitmoji-changelog

      - name: Action | Update changelog
        if: steps.release.outputs.type != 'stable'
        run: hatch run changelog-update

      - name: Action | Build & Check documentation
        if: ${{ steps.release.outputs.type == 'stable' }}
        run: hatch run docs:build-check
        continue-on-error: false

      - name: Setup | Configure Git for GitHub Actions bot
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Action | Build & Commit documentation
        run: |
          if [[ "${{ steps.release.outputs.type }}" == "stable" ]]; then
            MERINGUE_DOCS_VERSION=$(hatch version | grep -Eo '[0-9]\.[0-9]+' | head -1)
            echo "üöÄ Deploying docs for stable release $MERINGUE_DOCS_VERSION..."
            hatch run docs:ci-build $MERINGUE_DOCS_VERSION --update-aliases latest

          elif [[ "${{ steps.release.outputs.type }}" == "release-candidate" ]]; then
            echo "üß™ Deploying docs for next release..."
            hatch run docs:ci-build next

          else
            echo "‚öôÔ∏è Deploying dev docs..."
            hatch run docs:ci-build dev
          fi

      - name: Action | Deploy
        run: |
          git checkout gh-pages
          git push origin gh-pages
