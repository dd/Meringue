name: Release Python Package

on:
  push:
    branches: [master]
  workflow_dispatch:
  workflow_run:
    branches: [next]
    workflows: ["Tests"]
    types: [completed]

concurrency:
  group: release-package-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Version Package
    runs-on: ubuntu-latest
    # manual
    # without 'skip ci' and push (master)
    # without 'skip ci' and after push (on branch next) and 'Tests' workflow success
    if: |
      github.event_name == 'workflow_dispatch'
      || (
        !contains(github.event.head_commit.message, 'skip ci')
        && !contains(github.event.head_commit.message, 'ci skip')
        && (
          github.event_name == 'push'
          || (
            github.event_name == 'workflow_run'
            && github.event.workflow_run.event == 'push'
            && github.event.workflow_run.conclusion == 'success'
          )
        )
      )

    permissions:
      contents: write

    outputs:
      released: ${{ steps.semantic.outputs.released }}
      tag: ${{ steps.semantic.outputs.tag }}

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: git reset --hard ${{ github.sha }}

      - name: Setup | Install Hatch
        uses: pypa/hatch@install

      - name: Test | Hatch
        run: |
          which hatch
          hatch build

      - name: Action | Semantic Release [master]
        if: github.ref == 'refs/heads/master' || github.event.workflow_run.head_branch == 'master'
        id: release_master
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit: true

      - name: Action | Semantic Release [dev]
        if: github.ref != 'refs/heads/master' && github.event.workflow_run.head_branch != 'master'
        id: release_dev
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit: false
          root_options: -vv

      - name: Post-Release | Merge release outputs
        id: release
        run: |
          echo "released=${{ steps.release_master.outputs.released || steps.release_dev.outputs.released }}" >> $GITHUB_OUTPUT
          echo "tag=${{ steps.release_master.outputs.tag || steps.release_dev.outputs.tag }}" >> $GITHUB_OUTPUT

      - name: Action | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    name: Publish to PyPI & GitHub Release
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write

    steps:
      - name: Action | Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: dist

      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        if: steps.release.outputs.released == 'true'

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
