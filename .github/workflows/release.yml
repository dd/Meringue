name: Release Python Package

on:
  push:
    branches: [master]
  workflow_dispatch:
  workflow_run:
    workflows: ["Tests"]
    types: [completed]
    branches: [next]

concurrency:
  group: release-package-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Version Package
    runs-on: ubuntu-latest
    # manual
    # without 'skip ci' and push (master)
    # without 'skip ci' and after push (on branch next) and 'Tests' workflow success
    if: |
      github.event_name == 'workflow_dispatch'
      || (
        !contains(github.event.head_commit.message, 'skip ci')
        && !contains(github.event.head_commit.message, 'ci skip')
        && (
          github.event_name == 'push'
          || (
            github.event_name == 'workflow_run'
            && github.event.workflow_run.event == 'push'
            && github.event.workflow_run.conclusion == 'success'
          )
        )
      )

    permissions:
      contents: write

    outputs:
      released: ${{ steps.semantic.outputs.released }}
      tag: ${{ steps.semantic.outputs.tag }}

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup | Determine branch name
        id: determine_branch
        run: |
          set -e

          echo "🧠 Event name: ${GITHUB_EVENT_NAME}"
          echo "🔧 GITHUB_REF: ${GITHUB_REF}"

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_run" ]]; then
            BRANCH="${{ github.event.workflow_run.head_branch }}"
            echo "📡 Detected branch from workflow_run: $BRANCH"

          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            BRANCH="${{ github.event.pull_request.head.ref }}"
            echo "📡 Detected branch from pull_request: $BRANCH"

          elif [[ "${GITHUB_EVENT_NAME}" == "push" || "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
            echo "📡 Detected branch from ref: $BRANCH"

          else
            echo "❌ Unsupported or unknown event: ${GITHUB_EVENT_NAME}"
            exit 1
          fi

          if [[ -z "$BRANCH" ]]; then
            echo "❌ Could not determine branch name. Exiting."
            exit 1
          fi

          echo "✅ Using branch: $BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: Setup | Install Hatch
        uses: pypa/hatch@install

      - name: Action | Build Release and Commit (for stable release)
        id: release
        run: |
          if [[ "${{ steps.determine_branch.outputs.branch }}" == "master" ]]; then
            echo "🚀 Deploying stable release..."
            hatch run semantic-release version --no-vcs-release --no-tag
          else
            echo "🧪 Deploying dev release..."
            hatch run semantic-release version --no-commit --no-vcs-release --no-tag
          fi

          VERSION=$(hatch version)
          echo "🏷️ Version extracted: v$VERSION"
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Action | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    name: Publish to PyPI & GitHub Release
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/meringue

    steps:
      - name: Action | Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: dist

      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
