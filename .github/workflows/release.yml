name: Release Python Package

on:
  push:
    branches: [master]
  workflow_run:
    workflows: ["Tests"]
    types: [completed]
    branches: [next]

concurrency:
  group: release-package-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build, Version & Publish
    runs-on: ubuntu-latest
    # without 'skip ci' and push (master)
    # without 'skip ci' and after push (on branch next) and 'Tests' workflow success
    if: |
      !contains(github.event.head_commit.message, 'skip ci')
      && !contains(github.event.head_commit.message, 'ci skip')
      && (
        github.event_name == 'push'
        || (
          github.event_name == 'workflow_run'
          && github.event.workflow_run.event == 'push'
          && github.event.workflow_run.conclusion == 'success'
        )
      )

    environment:
      name: pypi
      url: https://pypi.org/p/meringue

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup | Determine branch name
        id: determine_branch
        run: |
          set -e

          echo "üß† Event name: ${GITHUB_EVENT_NAME}"
          echo "üîß GITHUB_REF: ${GITHUB_REF}"

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_run" ]]; then
            BRANCH="${{ github.event.workflow_run.head_branch }}"
            echo "üì° Detected branch from workflow_run: $BRANCH"

          elif [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
            echo "üì° Detected branch from ref: $BRANCH"

          else
            echo "‚ùå Unsupported or unknown event: ${GITHUB_EVENT_NAME}"
            exit 1
          fi

          if [[ -z "$BRANCH" ]]; then
            echo "‚ùå Could not determine branch name. Exiting."
            exit 1
          fi

          git checkout $BRANCH

          echo "‚úÖ Using branch: $BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Setup | Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: Setup | Install Hatch
        uses: pypa/hatch@install

      - name: Setup | Prepeare Semantic Version Release Options
        id: release_options
        run: |
          if [[ "${{ steps.determine_branch.outputs.branch }}" == "master" ]]; then
            echo "üöÄ Deploying stable release..."
            echo "commit=true" >> $GITHUB_OUTPUT
          else
            echo "üß™ Deploying dev release..."
            echo "commit=false" >> $GITHUB_OUTPUT
          fi

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ steps.release_options.outputs.commit }}

      # - name: Action | Build Release and Commit (for stable release)
      #   id: release
      #   run: |
      #     if [[ "${{ steps.determine_branch.outputs.branch }}" == "master" ]]; then
      #       echo "üöÄ Deploying stable release..."
      #       hatch run semantic-release version --no-vcs-release --no-tag
      #     else
      #       echo "üß™ Deploying dev release..."
      #       hatch run semantic-release version --no-commit --no-vcs-release --no-tag
      #     fi

      #     VERSION=$(hatch version)
      #     echo "üè∑Ô∏è Version extracted: v$VERSION"
      #     echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      # - name: Action | Check release already exist
      #   run: |
      #     if gh release view "${{ steps.release.outputs.tag }}" >/dev/null 2>&1; then
      #       echo "‚ö†Ô∏è Release ${{ steps.release.outputs.tag }} already exists. Exiting."
      #       exit 0
      #     fi
      #     echo "‚úÖ Release ${{ steps.release.outputs.tag }} not found. Continuing."

      - name: Action | Upload artifacts
        uses: actions/upload-artifact@v4
        if: steps.release.outputs.released == 'true'
        with:
          name: python-artifacts
          path: dist/*
          if-no-files-found: error

      - name: Publish | Upload to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@v1.12.4

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
